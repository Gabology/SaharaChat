@{
    Layout = null;
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Index</title>
    <script src="~/Scripts/jquery-1.6.4.min.js"></script>
    <script src="~/Scripts/jquery.signalR-2.1.2.min.js"></script>
    <script src="~/signalr/hubs">I</script>
    <script src="http://code.createjs.com/easeljs-0.8.0.min.js"></script>
</head>
<body>
    <div id="stage">
        <canvas id="myCanvas" width="1000" height="500" onclick="drawIt(event)"></canvas>
    </div>
    <input type="text" id="cursorX" size="5" />
    <input type="text" id="cursorY" size="5" />

    <script>
        var clients = {}
        var hub = $.connection.gameHub;

        var canvas = document.getElementById('myCanvas');
        var stage = new createjs.Stage("myCanvas");
        var myCircle = new createjs.Shape();
        myCircle.graphics.beginFill("DeepSkyBlue").drawCircle(0, 0, 20);
        
        var local = { "circle":myCircle };

        stage.addChild(local.circle);

        function drawIt(e) {
            var position = getMousePos(canvas, e);
            local.circle.x = position.x;
            local.circle.y = position.y;
       
            stage.update();
            $.connection.hub.start().done(function () {
                hub.server.sendPosition(local.circle.x, local.circle.y);
            });
        }

        hub.client.updatePositionOf = function (guid, x, y) {
            if (!clients.hasOwnProperty(guid)) {
                clients[guid] = {"circle": new createjs.Shape() }
                clients[guid].circle.graphics.beginFill("Red").drawCircle(0, 0, 20);
                stage.addChild(clients[guid].circle);
            } 
            // TODO: Invoke a function to delete the visual object 
            clients[guid].circle.x = x;
            clients[guid].circle.y = y;
            stage.update();
        }

        function getMousePos(canvas, pos) {
            var rect = canvas.getBoundingClientRect();
            return {
                x: pos.clientX - rect.left,
                y: pos.clientY - rect.top
            };
        }
        window.drawIt = drawIt;

    </script>

    <div>
        <a href="@Url.Action("Login", "Account")">Login</a>
        <a href="@Url.Action("Signup", "Account")">Signup</a>
    </div>


</body>

</html>


