@{
    Layout = "~/Views/Shared/_ErikLayout.cshtml";
}
@section scripts
{
    <script src="~/Scripts/jquery.signalR-2.1.2.min.js"></script>
    <script src="~/Scripts/json2.js"></script>
    <script src="~/signalr/hubs"></script>
    <script src="http://code.createjs.com/easeljs-0.8.0.min.js"></script>
}
<div id="stage">
    <canvas id="myCanvas" width="1000" height="500" onclick="drawIt(event)"></canvas>
</div>
<script defer>
    var clients = {}
    var hub = $.connection.gameHub;
    var connected = false;
    hub.state.UserName = "@ViewBag.UserName";

    var canvas = document.getElementById('myCanvas');
    var stage = new createjs.Stage("myCanvas");
    var myCircle = new createjs.Shape();
    myCircle.graphics.beginFill("DeepSkyBlue").drawCircle(0, 0, 20);

    var local = { "circle": myCircle };
    stage.addChild(local.circle);

    function getMousePos(canvas, pos) {
        var rect = canvas.getBoundingClientRect();
        return {
            x: pos.clientX - rect.left,
            y: pos.clientY - rect.top
        };
    }

    hub.client.printLog = function (json) {
        var obj = JSON.parse(json);
        $.each(obj, function (i, line) {
            console.log(line);
            $("#log").html(line.toString().split("\n").join("<br>"));
        }); 
    }

    hub.client.printConnections = function (con) { console.log(con); }

    hub.client.updatePositionOf = function (username, x, y) {
        if (!clients.hasOwnProperty(username)) {
            clients[username] = { "circle": new createjs.Shape() }
            clients[username].circle.graphics.beginFill("Red").drawCircle(0, 0, 20);
            stage.addChild(clients[username].circle);
        }

        clients[username].circle.x = x;
        clients[username].circle.y = y;
        stage.update();
    }

    function getLog() {
        hub.server.getLog();
        return "Server log requested..."
    }

    window.getClients = function () {
        hub.server.getConnections();
        return "ping"
    }

    $.connection.hub.start()
        .done(function () { connected = true })
        .fail(function () { console.log("Connection to server failed") });

    function drawIt(e) {
        if (connected) {
            var position = getMousePos(canvas, e);
            local.circle.x = position.x;
            local.circle.y = position.y;

            stage.update();
            hub.server.sendPosition(local.circle.x, local.circle.y, "@ViewBag.UserName");
        }
    }

    window.clients = clients;
    window.drawIt = drawIt;
</script>
<div id="log"></div>